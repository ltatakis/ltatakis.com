<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-03-01T18:03:32+00:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Lefteris Tatakis</title><subtitle>A Software Engineer based in Oxford. This is a blog about technology (engineering or bike!) and travel.</subtitle><entry><title type="html">10000ft of Machine Learning</title><link href="http://localhost:4000/machinelearningatgoogle/" rel="alternate" type="text/html" title="10000ft of Machine Learning" /><published>2019-03-01T17:30:00+00:00</published><updated>2019-03-01T17:30:00+00:00</updated><id>http://localhost:4000/machinelearningatgoogle</id><content type="html" xml:base="http://localhost:4000/machinelearningatgoogle/">&lt;p&gt;Today I went to a Machine learning training course at Google which was done by Datatonic. For me as a complete noobie in Machine Learning it was an opportunity to learn and freshen up my extremely limited and superficial knowledge gained by University Courses or hearing about pet projects of colleagues.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;iframe src=&quot;https://giphy.com/embed/WoWm8YzFQJg5i&quot; width=&quot;480&quot; height=&quot;351&quot; frameborder=&quot;0&quot; class=&quot;giphy-embed&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href=&quot;https://giphy.com/gifs/cartoons-comics-sea-reading-WoWm8YzFQJg5i&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;We started with a brief and interesting talk on the basic principles and history of ML, but then all of the sudden it just jumped in the complete deep end telling us to run complicated code in Google Collab. I tried to get my head around one of the exercises with the help of the instructor.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;iframe src=&quot;https://giphy.com/embed/l0NwvLFprv6DrUXx6&quot; width=&quot;480&quot; height=&quot;480&quot; frameborder=&quot;0&quot; class=&quot;giphy-embed&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href=&quot;https://giphy.com/gifs/afv-funny-fail-lol-l0NwvLFprv6DrUXx6&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;For me, the initial overview information and learning was the most valuable, and I would like to share some of it, for future me and anyone else interested.&lt;/p&gt;

&lt;p&gt;Hopefully, I will have a crack at trying a project myself and get my head around the more complicated concepts. ü§î&lt;/p&gt;

&lt;p&gt;(All the images used below are taken from the Datatonic slides)&lt;/p&gt;

&lt;h2 id=&quot;a-1000ft-view-of-machine-learning&quot;&gt;A 1000ft view of Machine Learning&lt;/h2&gt;

&lt;p&gt;Where I am at the moment and how I see machine learning is as:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/ml/MLinAnImage.png&quot; alt=&quot;Markdowm Image&quot; /&gt;&lt;/p&gt;
&lt;figcaption class=&quot;caption&quot;&gt;Machine learning in an image&lt;/figcaption&gt;

&lt;p&gt;You give it some data and it gives you a result. For now I am satisfied with that view on ML, however, I will have to a few books to get a bit more into the ML concepts.&lt;/p&gt;

&lt;p&gt;My brother (and ML enthusiast) is currently planning to read ‚ÄúDeep Learning‚Äù by Ian Goodfellow, which has now been added to my reading list!&lt;/p&gt;

&lt;h2 id=&quot;the-three-ml-categories&quot;&gt;The three ML categories&lt;/h2&gt;

&lt;p&gt;What was discussed today in the workshop that Machine learning mainly falls in three big categorisations:&lt;/p&gt;

&lt;p&gt;(1) Supervised learning&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Classification&lt;/li&gt;
  &lt;li&gt;Regression (eg linear regression is also ML ü§ì)&lt;/li&gt;
  &lt;li&gt;Forcasting&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/ml/petclassification.png&quot; alt=&quot;Markdowm Image&quot; /&gt;&lt;/p&gt;
&lt;figcaption class=&quot;caption&quot;&gt;We have different levels of classification&lt;/figcaption&gt;

&lt;p&gt;(2) Unsupervised Learning&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Clustering&lt;/li&gt;
  &lt;li&gt;Embedding&lt;/li&gt;
  &lt;li&gt;Forcasting&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(3) Optimasition - learn how to act by exploring the environment and receiving reward punishment.&lt;/p&gt;

&lt;p&gt;An interesting point I found for the classifications, if you train them in absolute terms and tell them for example the world is only dog and cats, if you give it a fish it will say dog or cat. It good to add some uncertainty and concept of ‚ÄúI don‚Äôt know‚Äù in the model, a Bayesian approach (probabilistic).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/ml/overviewOfMLProcess.png&quot; alt=&quot;Markdowm Image&quot; /&gt;&lt;/p&gt;
&lt;figcaption class=&quot;caption&quot;&gt;How a neural network arrives to a result&lt;/figcaption&gt;

&lt;h2 id=&quot;overview-of-process-to-create-a-ml-project&quot;&gt;Overview of process to create a ML project&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/ml/neural.png&quot; alt=&quot;Markdowm Image&quot; /&gt;&lt;/p&gt;
&lt;figcaption class=&quot;caption&quot;&gt;Overview of the Machine learning project&lt;/figcaption&gt;

&lt;h2 id=&quot;future-work-tools-to-have-a-play-with&quot;&gt;Future work: Tools to have a play with!&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Tensarflow&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Apache Spark (throwback to uni and maybe try and figure out what we did in that Data Science course! üò¨)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;spaCy&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;!-- ## Adding ML in Media Companies

You ML to identify

- Pricing strategies - optimal prices, personal prices, dynamic prices
- Churn prevention - identify subscribers likely to churn
- Piracy Detection --&gt;
&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;

&lt;p&gt;There is a lot to learn and its not an easy topic! üòÇ&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;iframe src=&quot;https://giphy.com/embed/1X61eW9DotM7TgBnOc&quot; width=&quot;480&quot; height=&quot;270&quot; frameborder=&quot;0&quot; class=&quot;giphy-embed&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href=&quot;https://giphy.com/gifs/hyperrpg-game-reaction-1X61eW9DotM7TgBnOc&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;Hopefully, I will be doing a project in ML soon to get my round it! ü§ì ü§î&lt;/p&gt;

&lt;p&gt;Thank you for reading! üëã&lt;/p&gt;

&lt;p&gt;If you notice any mistakes please contact me on &lt;a href=&quot;https://twitter.com/LTatakis&quot;&gt; Twitter&lt;/a&gt;.&lt;/p&gt;</content><author><name>LefterisTatakis</name></author><category term="blog" /><category term="machine learning" /><category term="training" /><category term="overview" /><summary type="html">Today I went to a Machine learning training course at Google which was done by Datatonic. For me as a complete noobie in Machine Learning it was an opportunity to learn and freshen up my extremely limited and superficial knowledge gained by University Courses or hearing about pet projects of colleagues.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/eventsourcing.png" /></entry><entry><title type="html">Indident Reports - a template</title><link href="http://localhost:4000/incidentreports/" rel="alternate" type="text/html" title="Indident Reports - a template" /><published>2019-02-05T17:30:00+00:00</published><updated>2019-02-05T17:30:00+00:00</updated><id>http://localhost:4000/incidentreports</id><content type="html" xml:base="http://localhost:4000/incidentreports/">&lt;p&gt;Bad things happen, the important thing is how do we deal with them when they do, and the actions we take so they don‚Äôt happen again.&lt;/p&gt;

&lt;p&gt;Today I would like to talk about Incident reports. A way for the technical / engineering staff to show the business we care about our platform, understand the problems caused and are willing to move ahead and be better next time. Showing the lessons learned from this mistake, in order to avoid getting bitten by it again.&lt;/p&gt;

&lt;p&gt;I have had to do two of these in the last 16 months and are always welcomed by the business. It helps them under stand the issues we have, the impact on the customers / business and how we are working to correcting our wrongs.&lt;/p&gt;

&lt;p&gt;The template below is circulated to the appropriate people in a Google Doc or Word documents prior to retrospectives or postmortems.  Hope its useful to you ü§ì&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;the-template&quot;&gt;The Template&lt;/h2&gt;

&lt;hr /&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Description&lt;/td&gt;
      &lt;td&gt;An overview of the problem&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;¬†&lt;/td&gt;
      &lt;td&gt;¬†&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Date&lt;/td&gt;
      &lt;td&gt;Date of problem&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;¬†&lt;/td&gt;
      &lt;td&gt;¬†&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Duration&lt;/td&gt;
      &lt;td&gt;1min - hours - days it occured for&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;¬†&lt;/td&gt;
      &lt;td&gt;¬†&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Identified&lt;/td&gt;
      &lt;td&gt;How did you find it&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;¬†&lt;/td&gt;
      &lt;td&gt;¬†&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Manifestation&lt;/td&gt;
      &lt;td&gt;When doing X in the website the users experience Y&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;¬†&lt;/td&gt;
      &lt;td&gt;¬†&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Financial impact&lt;/td&gt;
      &lt;td&gt;Outage caused 10 dollars worth of revenue loss&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;¬†&lt;/td&gt;
      &lt;td&gt;¬†&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Customer impact&lt;/td&gt;
      &lt;td&gt;Bad customer experience because‚Ä¶&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;¬†&lt;/td&gt;
      &lt;td&gt;¬†&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Next steps&lt;/td&gt;
      &lt;td&gt;How will we stop this from happening again?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;¬†&lt;/td&gt;
      &lt;td&gt;¬†&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;Details&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Business language explanation of how the problem manifested and why.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Impact&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;What was the impact to the business / customers&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Root cause of failure&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;What make this bad thing happen?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Moving forwards&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;What will we do in the future to stop this?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Improve dev process?&lt;/li&gt;
  &lt;li&gt;More tests?&lt;/li&gt;
  &lt;li&gt;Better alerting? etc&lt;/li&gt;
&lt;/ul&gt;</content><author><name>LefterisTatakis</name></author><category term="blog" /><category term="incident" /><category term="template" /><category term="reporting" /><summary type="html">Bad things happen, the important thing is how do we deal with them when they do, and the actions we take so they don‚Äôt happen again.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/eventsourcing.png" /></entry><entry><title type="html">Event Sourcing - a case study</title><link href="http://localhost:4000/event-sourcing/" rel="alternate" type="text/html" title="Event Sourcing - a case study" /><published>2019-02-01T17:10:00+00:00</published><updated>2019-02-01T17:10:00+00:00</updated><id>http://localhost:4000/event-sourcing</id><content type="html" xml:base="http://localhost:4000/event-sourcing/">&lt;h1 id=&quot;event-sourcing&quot;&gt;Event sourcing&lt;/h1&gt;

&lt;p&gt;In this blog I would like to talk about a solution we implemented early 2018 which used Event Sourcing. I have been meaning in making this blog post since the day we deployed the solution to production, so here goes!&lt;/p&gt;

&lt;h2 id=&quot;what-was-the-problem-we-were-trying-to-solve&quot;&gt;What was the problem we were trying to solve&lt;/h2&gt;

&lt;p&gt;We were retrieving prices for our B2B platform were we needed to retrieve and update the pricing for our ebooks. These prices needed to be retrieved from two files and the data values would change on irregular intervals and we would not be notified of any changes.&lt;/p&gt;

&lt;p&gt;Therefore, we would need to daily poll the data source, to identify if any changes were made in the prices and then if so update our pricing.&lt;/p&gt;

&lt;p&gt;The nature of the problem were were trying to solve was:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Complicated data input structure&lt;/li&gt;
  &lt;li&gt;Variety of pricing models within the data structure&lt;/li&gt;
  &lt;li&gt;Multiple sources of data&lt;/li&gt;
  &lt;li&gt;Only update the prices that change between executions of the application (if any)&lt;/li&gt;
  &lt;li&gt;Auditing capabilities would be nice&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The only requirement our side was that it would be TDD‚Äôed (another great tool I was getting more hands on at the time).&lt;/p&gt;

&lt;h2 id=&quot;why-are-we-using-this-pattern&quot;&gt;Why are we using this pattern&lt;/h2&gt;

&lt;p&gt;I am sure other patterns and approaches may have been applicable for the problem we were trying to solve. However, this is what we felt met the criteria the business had set us and the technical benchmarks we had set ourselves.&lt;/p&gt;

&lt;p&gt;This pattern brought a three vital benefits with it:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Identification&lt;/strong&gt; of differences each time we have a new event&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Accountability&lt;/strong&gt; and &lt;strong&gt;traceability&lt;/strong&gt; of changes for the business. This makes it a great feature to rely on because every time the business asks us:
    &lt;ul&gt;
      &lt;li&gt;When did this product get added?&lt;/li&gt;
      &lt;li&gt;When did the price change?&lt;/li&gt;
      &lt;li&gt;Why was it removed?&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;We have answers for all those questions within seconds by just looking at the events.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;what-is-event-sourcing&quot;&gt;What is Event Sourcing&lt;/h1&gt;

&lt;p&gt;Key entities within the pattern:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Command&lt;/strong&gt; is a request made to the system to do something.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;State&lt;/strong&gt;  is the current form the data has.  The application reconstructs an entity‚Äôs ( a concept within our event store) current state by replaying the events.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Event&lt;/strong&gt; is described as an action or change in the system, for example: a price change, a start of a new batch of prices or a product deletion. A key point about events is that they are immutable and can be stored using an append-only operation.&lt;/p&gt;

&lt;p&gt;Finally, events should be defined in the Domain experts language in order to allow a representation of the system that matches the problem we are trying to solve. For example, types of Events we had were: ‚ÄòPRICE_ADDED‚Äô, ‚ÄòPRICE_UPDATED‚Äô, ‚ÄòPRICE_DELETED‚Äô.&lt;/p&gt;

&lt;p&gt;The interface we used for event was:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;export interface Event {
    name: string;
    id: number;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;where depending on the event type it was we would add extra attributes, eg prices.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Projection&lt;/strong&gt; or materialised views are a generated current state of the system by replaying all the events in the system. We used this projection (table) to allow retrieval of the prices from other sources.&lt;/p&gt;

&lt;p&gt;Given these key entities we describe above, we have the following key components that bring the pattern together and manipulate these entities:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;State Retriever&lt;/strong&gt; replays all the events that have come before this point (if any) and generates the latest state of the system.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Command Generator&lt;/strong&gt; receives the input data and the current state of the system, to generate the changes that need to be made to the system.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Command Handler:&lt;/strong&gt; given a specific type of command (a Handler) and the current &lt;code class=&quot;highlighter-rouge&quot;&gt;state&lt;/code&gt; to generate the event that will trigger this change. For example, in our example we have the ImportHandler that will decide whether or not to add/change/remove a price from our model.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Evolve:&lt;/strong&gt; The Evolver is the component that acts on the event through a series of Listeners. The listeners are classes that implements behaviours such as:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Saving the event down to the event store&lt;/li&gt;
  &lt;li&gt;Deleting prices from the projections&lt;/li&gt;
  &lt;li&gt;Modifying the projection&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;our-implementation-of-event-sourcing&quot;&gt;Our implementation of Event sourcing&lt;/h1&gt;

&lt;figcaption class=&quot;caption&quot;&gt;An overview of our system&lt;/figcaption&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/eventsourcing.png&quot; alt=&quot;Markdowm Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The key component of the application that puts this pattern together is here:&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;c1&quot;&gt;// Going to start add prices process &lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;batchState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stateRetriever&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getCurrentBatchState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;batchEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BatchEvent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;batchHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;handle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'START_BATCH'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;batchState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;batchState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;BatchState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;batchEvolver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;evolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;batchState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;batchEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;commandGenerator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CommandGenerator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currentStates&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stateRetriever&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getCurrentPriceState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;commands&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ImportPriceCommand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;commandGenerator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;generate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currentStates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;commands&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    		&lt;span class=&quot;c1&quot;&gt;// Check if current command has a current State. &lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currentStateForISBN&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
    		&lt;span class=&quot;c1&quot;&gt;// if not instantiate &lt;/span&gt;
    
    		&lt;span class=&quot;c1&quot;&gt;// Generate appropriate event&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;importEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ImportEvent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;importHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;handle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currentStates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;currentStateForISBN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
    
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;importEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;currentStates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;currentStateForISBN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;importEvolver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;evolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;currentStates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;currentStateForISBN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;importEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    	&lt;span class=&quot;c1&quot;&gt;// error handling&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;finally&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    	&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;batchEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BatchEvent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;batchHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;handle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'END_BATCH'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;batchState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    	&lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;batchEvolver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;evolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;batchState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;batchEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;How do we get the latest state? From the &lt;code class=&quot;highlighter-rouge&quot;&gt;StateRetriever&lt;/code&gt; of course!&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getCurrentPriceState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ImportState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;allEvents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ImportEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;databaseManager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getAllImportEvents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;states&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ImportState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
    
            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;allEvents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currentState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;states&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isbn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isbn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;currentState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;nx&quot;&gt;currentState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                        &lt;span class=&quot;na&quot;&gt;isbn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isbn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                        &lt;span class=&quot;na&quot;&gt;lastEventId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                        &lt;span class=&quot;na&quot;&gt;accountPrices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
                    &lt;span class=&quot;nx&quot;&gt;states&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;currentState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;currentState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;importEvolver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;evolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;currentState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;states&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Import Price Evolver&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;evolve&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ImportState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ImportEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ImportState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isbn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isbn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'State and event isbns dont match!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lastEventId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'State and event lastEventId are out of sync!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
            &lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;accountPrices&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;squashPrices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;accountPrices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lastEventId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Key point&lt;/span&gt;
    
            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;listener&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;listeners&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;listener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;notify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;where &lt;code class=&quot;highlighter-rouge&quot;&gt;squarePrices&lt;/code&gt; merges all the events and returns the latest state for that event.&lt;/p&gt;

&lt;p&gt;In the line&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;listener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;notify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;one scenario would be to save the event down into the event store (MySQL database), therefore, the listener of was really simple, a were more &lt;strong&gt;Listeners&lt;/strong&gt;.&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;notify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ImportEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
         &lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;saveEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;the-learning-curve&quot;&gt;The learning curve&lt;/h2&gt;
&lt;iframe src=&quot;https://giphy.com/embed/bEVKYB487Lqxy&quot; width=&quot;480&quot; height=&quot;264&quot; frameborder=&quot;0&quot; class=&quot;giphy-embed&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;/p&gt;

&lt;p&gt;Event sourcing was  a completely different mindset than any other solution I had ever approached.&lt;/p&gt;

&lt;p&gt;The concept of encoding the changes in events, and then in order to retrieve the answer we would have to reply all the events each time, took me a while to understand. Especially when it came to the projection.&lt;/p&gt;

&lt;p&gt;What do you mean we have a current state of the data ( projection ) but in order to change the prices we don‚Äôt pull the data from there but we will have to replay the data?&lt;/p&gt;

&lt;p&gt;Once I was able to get that concept into my head‚Ä¶ I think I was finally there :)&lt;/p&gt;

&lt;p&gt;There were a number of times I was thinking ‚Äúwow we are over engineering this solution‚Äù and maybe we were. But the benefits of this solution and the learning experience of it were significant and invaluable.&lt;/p&gt;

&lt;p&gt;The were a number of times I felt like this:&lt;/p&gt;
&lt;iframe src=&quot;https://giphy.com/embed/NbgeJftsErO5q&quot; width=&quot;480&quot; height=&quot;380&quot; frameborder=&quot;0&quot; class=&quot;giphy-embed&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&quot;benefits-we-are-seeing-now-that-we-are-using-it&quot;&gt;Benefits we are seeing now that we are using it&lt;/h2&gt;

&lt;p&gt;Through the nature of the pattern and the approach we took, TDD, the maintenance of this repo over the last year has been extremely straight forward and hassle free.&lt;/p&gt;

&lt;p&gt;Reporting to the product owners and key business stakeholders has been straight forward.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Well worth the learning curve&lt;/li&gt;
  &lt;li&gt;Reliable audit log&lt;/li&gt;
  &lt;li&gt;Its one of the most maintainable features we have.&lt;/li&gt;
  &lt;li&gt;It was a great learning experience.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Would recommend if it fits your problem :)&lt;/p&gt;

&lt;p&gt;As always if there is something I have got wrong please let me know on &lt;a href=&quot;https://twitter.com/LTatakis&quot;&gt; Twitter&lt;/a&gt;.&lt;/p&gt;</content><author><name>LefterisTatakis</name></author><category term="blog" /><category term="event sourcing" /><category term="node" /><category term="pattern" /><summary type="html">Event sourcing</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/eventsourcing.png" /></entry><entry><title type="html">Week 3 - Bike fit</title><link href="http://localhost:4000/week3ironman-bike-fit/" rel="alternate" type="text/html" title="Week 3 - Bike fit" /><published>2019-01-19T15:32:00+00:00</published><updated>2019-01-19T15:32:00+00:00</updated><id>http://localhost:4000/week3ironman-bike-fit</id><content type="html" xml:base="http://localhost:4000/week3ironman-bike-fit/">&lt;p&gt;This week‚Äôs highlight is the initial fitting of my Aero bars! As always, when it comes to bike fit, I go to &lt;a href=&quot;https://www.sportstechlab.com/&quot;&gt;sportstechlab&lt;/a&gt; to discuss what my goals are and how I want to do this.
Given my current experience with aero bars ( 0 ) and flexibility ( not the best ) we decided to use aerobars as just a variation to place my body / hands during the long rides.
I shouldn‚Äôt be aiming to be saving X amount of Watts due to this position, but to be able to just add variety to my body position during long rides.
If I can just stay on the aerobars for 20% of the race that would be a huge benefit for my performance.&lt;/p&gt;

&lt;p&gt;However, to achieve this &lt;strong&gt;its going to be a journey&lt;/strong&gt;. With multiple visits to Bryan to change and adjust my bike fit.&lt;/p&gt;

&lt;p&gt;My flexibility and comfort over the next 2-3 months needs to significantly improve if I am to consider this bike position for race day. And I can assure you that needs a lot of work ‚Ä¶ üò≥&lt;/p&gt;

&lt;p&gt;For example, currently my nature body position on the aerobars is:
&lt;img src=&quot;/assets/images/ironman/currentbikeposition.jpg&quot; alt=&quot;Markdowm Image&quot; /&gt;&lt;/p&gt;
&lt;figcaption class=&quot;caption&quot;&gt;How I currently rest on the bike&lt;/figcaption&gt;

&lt;p&gt;However, it has to become like this: 
&lt;img src=&quot;/assets/images/ironman/desiredbikepos.jpg&quot; alt=&quot;Markdowm Image&quot; /&gt;&lt;/p&gt;
&lt;figcaption class=&quot;caption&quot;&gt;What I need to be for race day&lt;/figcaption&gt;

&lt;p&gt;That means my low back and hip muscles needs to strengthen and not be a tight!
Which as anything in this journey is easier said that done! üòÖ&lt;/p&gt;

&lt;p&gt;Added to all this, today I did 1:55min on the turbo ‚Ä¶ pfff‚Ä¶ not so much fun.. after a certain point I need to start watching videos rather  than focusing on Zwift because my mind just can‚Äôt take it! 
This is something I will have to work on, but that probably means more time on the turbo üôà
But what I would like to do when its less cold and likely to have ice on the road, to just do the training outside. Sitting on the turbo for 2-3 hours is just mental torture!&lt;/p&gt;</content><author><name>Lefteris Tatakis</name></author><category term="blog" /><category term="ironman" /><category term="training" /><category term="bike" /><summary type="html">This week‚Äôs highlight is the initial fitting of my Aero bars! As always, when it comes to bike fit, I go to sportstechlab to discuss what my goals are and how I want to do this. Given my current experience with aero bars ( 0 ) and flexibility ( not the best ) we decided to use aerobars as just a variation to place my body / hands during the long rides. I shouldn‚Äôt be aiming to be saving X amount of Watts due to this position, but to be able to just add variety to my body position during long rides. If I can just stay on the aerobars for 20% of the race that would be a huge benefit for my performance.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/ironman/currentbikeposition.jpg" /></entry><entry><title type="html">Week 2 - Ironman training</title><link href="http://localhost:4000/week2iromantraining/" rel="alternate" type="text/html" title="Week 2 - Ironman training" /><published>2019-01-13T19:32:00+00:00</published><updated>2019-01-13T19:32:00+00:00</updated><id>http://localhost:4000/week2iromantraining</id><content type="html" xml:base="http://localhost:4000/week2iromantraining/">&lt;p&gt;My main focus for these early months is the cycling, my key weakness. I would like to try and start enjoying the session as much as this:&lt;/p&gt;
&lt;iframe src=&quot;https://giphy.com/embed/C429iD9jGChRm&quot; width=&quot;480&quot; height=&quot;269&quot; frameborder=&quot;0&quot; class=&quot;giphy-embed&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href=&quot;https://giphy.com/gifs/funny-pictures-peter-sagan-C429iD9jGChRm&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It &lt;em&gt;might&lt;/em&gt; happen üòÇ but we shall see‚Ä¶ üòÖ&lt;/p&gt;

&lt;p&gt;The highlight of this week was my first ‚Äúlong‚Äù session on the turbo, 
1hour 35 min üò≥ I am not sure how people do it‚Ä¶ its not confortable!&lt;/p&gt;

&lt;p&gt;In order to finish the session, I had to distract myself with Youtube videos to get past the pain of the last 10 min!
Looking at the Zwift Grand Fondo program I am doing its only going up! With sessions over 3 hours on a turbo! üò±&lt;/p&gt;

&lt;p&gt;The sessions this week were:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Monday morning swim&lt;/li&gt;
  &lt;li&gt;Wednesday double cycling session. Was not planned, but as I was prepping for the Oxford Tri swim I found out the boiler was broken down at the pool! The Lead Coach joked about using wetsuits in the pool, as it was 25C. Personally did not fancy a cold pool on a January evening üòÖ And did a bike session instead!&lt;/li&gt;
  &lt;li&gt;Sunday 1:35 on Zwift and 5km run.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/ironman/week2-training.png&quot; alt=&quot;Markdowm Image&quot; /&gt;&lt;/p&gt;
&lt;figcaption class=&quot;caption&quot;&gt;Training distribution&lt;/figcaption&gt;</content><author><name>Lefteris Tatakis</name></author><category term="blog" /><category term="ironman" /><category term="training" /><summary type="html">My main focus for these early months is the cycling, my key weakness. I would like to try and start enjoying the session as much as this:</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/ironman/week2-training.png" /></entry><entry><title type="html">Kubernetes - Blue Green Deployment</title><link href="http://localhost:4000/greenbluedeployment/" rel="alternate" type="text/html" title="Kubernetes - Blue Green Deployment" /><published>2019-01-08T16:41:00+00:00</published><updated>2019-01-08T16:41:00+00:00</updated><id>http://localhost:4000/greenbluedeployment</id><content type="html" xml:base="http://localhost:4000/greenbluedeployment/">&lt;p&gt;Its only been a few weeks since using this strategy our production environment at Elsevier, and its already shown its value multiple times! I think its an awesome strategy!
So‚Ä¶ what it is?!&lt;/p&gt;

&lt;p&gt;Before we start some quick terminology:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Blue deployment is the deployment currently in production&lt;/li&gt;
  &lt;li&gt;Green deployment is the new release we want to make&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;overview---10000-ft-Ô∏è&quot;&gt;Overview - 10000 ft ‚úàÔ∏è&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Blue-green deployment&lt;/em&gt; is a strategy that allows you to switch deployments of your code with minimal, dare I say 0 down time.
The code is versioned, we call the old code the blue deployment while the new one green. The versioning of the code ensures that the traffic is routed to the &lt;em&gt;old&lt;/em&gt; pods initially, until, we are confident that the new code is ready to be deployed! 
Once we are happy that the &lt;code class=&quot;highlighter-rouge&quot;&gt;Green deployment&lt;/code&gt; is up and running, we switch the traffic and we delete the blue deployment.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/kubernetes/point2blue.png&quot; alt=&quot;Markdowm Image&quot; /&gt;&lt;/p&gt;
&lt;figcaption class=&quot;caption&quot;&gt;Starting point, traffic going to blue deployment&lt;/figcaption&gt;

&lt;p align=&quot;center&quot;&gt;Voila! &lt;/p&gt;

&lt;h2 id=&quot;the-problem-we-solved&quot;&gt;The problem we solved&lt;/h2&gt;
&lt;p&gt;We noticed that in our Production system the initial 5-10 minutes of the new deployment was unstable, eg we saw old code showing between refreshes of the pages.
This was because, until the new code was up and running we had both deployments of our code serving our customers, obviously causing instability and weird behavior.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Each release deployment is versioned.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/assets/kubernetes/point2green.png&quot; alt=&quot;Markdowm Image&quot; /&gt;&lt;/p&gt;
&lt;figcaption class=&quot;caption&quot;&gt;Following successful green deployment traffic&lt;/figcaption&gt;

&lt;h2 id=&quot;the-meat--of-it&quot;&gt;The meat ü•© of it!&lt;/h2&gt;
&lt;p&gt;The deployment YML looked like:&lt;/p&gt;
&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;apps/v1beta1&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Deployment&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;the-awesome-page-##VERSION##&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;matchLabels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;the-awesome-page&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;##VERSION##&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;replicas&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;3&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;the-awesome-page&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;##VERSION##&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;containers&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;the-awesome-page&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;##IMAGE##&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The service of the application&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-YAML&quot;&gt;apiVersion: v1
kind: Service
metadata:
  name: the-awesome-page
spec:
  ports:
  - port: 80
    name: http
    targetPort: http
  selector:
    app: the-awesome-page
    version: ##VERSION##
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and the implementation strategy was done in the Jenkins pipeline step:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;BLUEDEPLOYMENT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;kubectl &lt;span class=&quot;nt&quot;&gt;--namespace&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;namespace&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; get service &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;project&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; json | jq &lt;span class=&quot;s1&quot;&gt;'.spec.selector.version'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;kubernetes
&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;f &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.yml
&lt;span class=&quot;k&quot;&gt;do
    if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$f&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;service.yml&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
        &lt;/span&gt;kubectl &lt;span class=&quot;nt&quot;&gt;--namespace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;namespace&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; apply &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$f&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;fi
done
&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ..

&lt;span class=&quot;nv&quot;&gt;READY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;kubectl get deploy &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;project&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;-&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;buildTag&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; json &lt;span class=&quot;nt&quot;&gt;--namespace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;namespace&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; | jq &lt;span class=&quot;s1&quot;&gt;'.status.conditions[] | select(.reason == &quot;MinimumReplicasAvailable&quot;) | .status'&lt;/span&gt; | tr &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&quot;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;TIMEOUT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$READY&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;True&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$TIMEOUT&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-lt&lt;/span&gt; 30 &lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do
    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;READY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;kubectl get deploy &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;project&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;-&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;buildTag&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; json &lt;span class=&quot;nt&quot;&gt;--namespace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;namespace&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; | jq &lt;span class=&quot;s1&quot;&gt;'.status.conditions[] | select(.reason == &quot;MinimumReplicasAvailable&quot;) | .status'&lt;/span&gt; | tr &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&quot;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;The green blue deployment is not ready yet&quot;&lt;/span&gt;
    sleep 10
    &lt;span class=&quot;nv&quot;&gt;TIMEOUT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$((&lt;/span&gt;TIMEOUT &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;done

&lt;/span&gt;kubectl &lt;span class=&quot;nt&quot;&gt;--namespace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;namespace&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; apply &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; ./kubernetes/service.yml
&lt;span class=&quot;nv&quot;&gt;GREENDEPLOYMENT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;kubectl &lt;span class=&quot;nt&quot;&gt;--namespace&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;namespace&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; get service &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;project&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; json | jq &lt;span class=&quot;s1&quot;&gt;'.spec.selector.version'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-z&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$BLUEDEPLOYMENT&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$BLUEDEPLOYMENT&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$GREENDEPLOYMENT&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# try - we did this in case the old deployment was not there anymore for some reason&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;BLUEDEPLOYMENT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$BLUEDEPLOYMENT&lt;/span&gt; | tr &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&quot;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
        kubectl delete deployment &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;project&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;-&lt;span class=&quot;nv&quot;&gt;$BLUEDEPLOYMENT&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--namespace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;namespace&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# catch&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;# save log for exception&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;details-of-the-implementation&quot;&gt;Details of the implementation&lt;/h2&gt;
&lt;h3 id=&quot;retrieving-blue-version&quot;&gt;Retrieving Blue version&lt;/h3&gt;
&lt;p&gt;First, we need to retrieve the version that is currently used in the &lt;code class=&quot;highlighter-rouge&quot;&gt;Blue deployment&lt;/code&gt;.
The module that controls this routing is the &lt;code class=&quot;highlighter-rouge&quot;&gt;Service&lt;/code&gt; of our deployment in Kubernetes.
We do this by asking Kubernetes to give us the current version of the deployment its using.&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;BLUEDEPLOYMENT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;kubectl &lt;span class=&quot;nt&quot;&gt;--namespace&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;namespace&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; get service &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;project&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; json | jq &lt;span class=&quot;s1&quot;&gt;'.spec.selector.version'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;yml-deployment-sequence&quot;&gt;YML Deployment Sequence&lt;/h3&gt;
&lt;p&gt;Previously, our approach was to apply all the YML in one go, for example:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kubectl apply &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; ./
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;However, to get the benefit of this strategy we apply our &lt;code class=&quot;highlighter-rouge&quot;&gt;service.yml&lt;/code&gt; only once the rest of the deployment is up.
This is because if we apply &lt;em&gt;all&lt;/em&gt; the YML at once the &lt;code class=&quot;highlighter-rouge&quot;&gt;Service&lt;/code&gt; will be overridden straight away, causing bigger problems than we are trying to solve!&lt;/p&gt;

&lt;p&gt;Therefore, we initially  deploy the deployment and the ingresses:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kubectl &lt;span class=&quot;nt&quot;&gt;--namespace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;namespace&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; apply &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; ./kubernetes/deployment.yml
kubectl &lt;span class=&quot;nt&quot;&gt;--namespace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;namespace&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; apply &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; ./kubernetes/ingress.yml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;and only once all the required deployments are in place, we deploy the service new service:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kubectl &lt;span class=&quot;nt&quot;&gt;--namespace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;namespace&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; apply &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; ./kubernetes/service.yml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;ensuring-the-code-is-successfully--deployed&quot;&gt;Ensuring the code is successfully  deployed&lt;/h3&gt;
&lt;p&gt;In order to check the code is there and ready to be served to our customers, we loop through the condition.
The condition that is responsible for us knowing if we are ready is:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;READY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;kubectl get deploy &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;project&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;-&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; json &lt;span class=&quot;nt&quot;&gt;--namespace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;namespace&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; | jq &lt;span class=&quot;s1&quot;&gt;'.status.conditions[] | select(.reason == &quot;MinimumReplicasAvailable&quot;) | .status'&lt;/span&gt; | tr &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&quot;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;What are retrieving the Kubernetes information for the deployment we just made and make sure we have the &lt;code class=&quot;highlighter-rouge&quot;&gt;MinimumReplicasAvailable&lt;/code&gt; needed for this deployment.
If this criterion is not met, we are not ready to route traffic through, so we wait and try again later ‚úåÔ∏è.&lt;/p&gt;

&lt;h3 id=&quot;deleting-of-the-old-deployment&quot;&gt;Deleting of the old deployment&lt;/h3&gt;
&lt;p&gt;When implementing this we needed to be aware of two key possible issues:&lt;/p&gt;

&lt;p&gt;1) The blue and green deployments are the same. This would occur if we are rerunning the Jenkins job that deployed the current version.&lt;/p&gt;

&lt;p&gt;2) The old deployment does not exist anymore. This is not a scenario we should see in production, but in &lt;code class=&quot;highlighter-rouge&quot;&gt;dev&lt;/code&gt; where we frequently go and delete a deployment due to &lt;em&gt;X&lt;/em&gt; or &lt;em&gt;Y&lt;/em&gt; reason. We handle this by not failing the Jenkins build because we don‚Äôt want the Jenkins build to fail, as the latest deployment has been successful at this point!&lt;/p&gt;

&lt;p&gt;Therefore, we added the comparison of the &lt;code class=&quot;highlighter-rouge&quot;&gt;blue&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;green&lt;/code&gt; version to combat point (1), and we created a try/catch block to ensure we don‚Äôt fail our build due to some behind the scenes manual work, for (2).&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Blue-green deployment is a strategy that allows minimal down time of your application. Its straightforward to implement and very valuable in my opinion.&lt;/p&gt;

&lt;p&gt;Thank you for reading! üëã&lt;/p&gt;

&lt;p&gt;If you notice any mistakes please contact me on &lt;a href=&quot;https://twitter.com/LTatakis&quot;&gt; Twitter&lt;/a&gt;.&lt;/p&gt;</content><author><name>Lefteris Tatakis</name></author><category term="blog" /><category term="kubernetes" /><category term="jenkins" /><summary type="html">Its only been a few weeks since using this strategy our production environment at Elsevier, and its already shown its value multiple times! I think its an awesome strategy! So‚Ä¶ what it is?!</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/kubernetes/point2blue.png" /></entry><entry><title type="html">Week 1 - Start of 2019 and Ironman training</title><link href="http://localhost:4000/firstweekofIromanTraining/" rel="alternate" type="text/html" title="Week 1 - Start of 2019 and Ironman training" /><published>2019-01-06T21:08:00+00:00</published><updated>2019-01-06T21:08:00+00:00</updated><id>http://localhost:4000/firstweekofIromanTraining</id><content type="html" xml:base="http://localhost:4000/firstweekofIromanTraining/">&lt;p&gt;Well it‚Äôs officially 2019! woop woop! üéâ ü•≥&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;iframe src=&quot;https://giphy.com/embed/QMkPpxPDYY0fu&quot; width=&quot;480&quot; height=&quot;204&quot; frameborder=&quot;0&quot; class=&quot;giphy-embed&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href=&quot;https://giphy.com/gifs/happy-leonardo-dicaprio-cheers-QMkPpxPDYY0fu&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/p&gt;
&lt;p&gt;Its going to be a big year for me, its the year I am going to become an Ironman.
You will notice that I am &lt;em&gt;confident&lt;/em&gt; about it. Well ‚Ä¶ lets say we shall see what happens, but:&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
Failure is not an option!
&lt;/p&gt;
&lt;p&gt;I have focused on starting the new year running, (or more like cycling) by doing all the key sessions I should be doing over the next few months.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Cycling sessions. I started doing my Zwift Grand Fonto training program, which aims to build my fitness to be ready to do 100-200km.&lt;/li&gt;
  &lt;li&gt;Early morning swims, at 6:30. I am currently trying to get my body used to that effort. These sessions should be easy (eventually), active recovery for 40-50 minutes. (Going to do one tomorrow üòÖ)&lt;/li&gt;
  &lt;li&gt;Brick sessions. I ‚Äúkinda‚Äù did one on Monday but I rested in between the sessions‚Ä¶ So‚Ä¶ maybe it was just two sessions, which luckily is something I need to do also!&lt;/li&gt;
  &lt;li&gt;Enjoyed my life a bit! üòá&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The top three items all had there challenges. For example, the Zwift program was quite demanding and I am only on Week 0 ( üò≥ ), the swim was at 6:30 am (enough said) and the brick was the first ‚Äúlong‚Äù ride I had dont since probably September.&lt;/p&gt;

&lt;p&gt;So far, so good!&lt;/p&gt;

&lt;p&gt;A &lt;em&gt;lot&lt;/em&gt; more hard work to come, but dare I say ( ü§ûüèª ) I am ready for it!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/ironman/week1-training.png&quot; alt=&quot;Markdowm Image&quot; /&gt;&lt;/p&gt;
&lt;figcaption class=&quot;caption&quot;&gt;Training distribution&lt;/figcaption&gt;</content><author><name>Lefteris Tatakis</name></author><category term="blog" /><category term="ironman" /><category term="training" /><summary type="html">Well it‚Äôs officially 2019! woop woop! üéâ ü•≥</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/markdown.jpg" /></entry><entry><title type="html">Expedition Peru</title><link href="http://localhost:4000/my-trip-to-peru/" rel="alternate" type="text/html" title="Expedition Peru" /><published>2018-10-31T23:48:00+00:00</published><updated>2018-10-31T23:48:00+00:00</updated><id>http://localhost:4000/my-trip-to-peru</id><content type="html" xml:base="http://localhost:4000/my-trip-to-peru/">&lt;p&gt;Some of my favourite pictures from my Peru trip üòä&lt;/p&gt;

&lt;figcaption class=&quot;caption&quot;&gt;Machuu Pichuu&lt;/figcaption&gt;
&lt;p&gt;&lt;img src=&quot;/assets/peru/peru.JPG&quot; alt=&quot;Markdowm Image&quot; /&gt;&lt;/p&gt;

&lt;figcaption class=&quot;caption&quot;&gt;The Amazon - it was amazing!&lt;/figcaption&gt;
&lt;p&gt;&lt;img src=&quot;/assets/peru/amazon.jpg&quot; alt=&quot;Markdowm Image&quot; /&gt;&lt;/p&gt;

&lt;figcaption class=&quot;caption&quot;&gt;The Incan king in Cusco&lt;/figcaption&gt;
&lt;p&gt;&lt;img src=&quot;/assets/peru/incaking.JPG&quot; alt=&quot;Markdowm Image&quot; /&gt;&lt;/p&gt;

&lt;figcaption class=&quot;caption&quot;&gt;A traditional Incan dog - used to be considered as bad luck. Now are a point of pride for the locals&lt;/figcaption&gt;
&lt;p&gt;&lt;img src=&quot;/assets/peru/incandog.JPG&quot; alt=&quot;Markdowm Image&quot; /&gt;&lt;/p&gt;

&lt;figcaption class=&quot;caption&quot;&gt;Driving towards Ollantaytambo &lt;/figcaption&gt;
&lt;p&gt;&lt;img src=&quot;/assets/peru/river.jpg&quot; alt=&quot;Markdowm Image&quot; /&gt;&lt;/p&gt;

&lt;figcaption class=&quot;caption&quot;&gt;Ollantaytambo store warehouses&lt;/figcaption&gt;
&lt;p&gt;&lt;img src=&quot;/assets/peru/Ollantaytambo.JPG&quot; alt=&quot;Markdowm Image&quot; /&gt;&lt;/p&gt;

&lt;figcaption class=&quot;caption&quot;&gt;A fantastic view of the mountain towards Aqua Calientes &lt;/figcaption&gt;
&lt;p&gt;&lt;img src=&quot;/assets/peru/trainToCusco.jpg&quot; alt=&quot;Markdowm Image&quot; /&gt;&lt;/p&gt;</content><author><name>LefterisTatakis</name></author><category term="blog" /><category term="travel" /><category term="peru" /><category term="photos" /><summary type="html">Some of my favourite pictures from my Peru trip üòä</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/peru/peru.JPG" /></entry><entry><title type="html">Chaos Engineering @ Velocity</title><link href="http://localhost:4000/halloween-chaos-engineering/" rel="alternate" type="text/html" title="Chaos Engineering @ Velocity" /><published>2018-10-31T18:48:00+00:00</published><updated>2018-10-31T18:48:00+00:00</updated><id>http://localhost:4000/halloween-chaos-engineering</id><content type="html" xml:base="http://localhost:4000/halloween-chaos-engineering/">&lt;p&gt;Talk given by @Ana_M_Medina from Gremlin.&lt;/p&gt;

&lt;h1 id=&quot;what-is-chaos-engineering&quot;&gt;What is Chaos Engineering?&lt;/h1&gt;

&lt;p&gt;Thoughtful, planned experiments designed to reveal the weakness in our systems.&lt;/p&gt;

&lt;p&gt;Where we would try to:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Inject something harmful to build an immunity&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;why-do-it&quot;&gt;Why do it?&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Downtime is really expensive&lt;/li&gt;
  &lt;li&gt;Our dependencies will fail&lt;/li&gt;
  &lt;li&gt;Pager fatigue&lt;/li&gt;
  &lt;li&gt;Reveal weak points in your systems&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;Dashboard and metrics (New Relic, Kibana)&lt;/li&gt;
  &lt;li&gt;Alerting&lt;/li&gt;
  &lt;li&gt;What is our cost per hour of outage?&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;principles-of-chaos-engineering&quot;&gt;&lt;a href=&quot;http://principlesofchaos.org/&quot;&gt;Principles of Chaos Engineering&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;These experiments follow four steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Start by defining ‚Äòsteady state‚Äô as some measurable output of a system that indicates normal behavior.&lt;/li&gt;
  &lt;li&gt;Hypothesize that this steady state will continue in both the control group and the experimental group.&lt;/li&gt;
  &lt;li&gt;Introduce variables that reflect real world events like servers that crash, hard drives that malfunction, network connections that are severed, etc.&lt;/li&gt;
  &lt;li&gt;Try to disprove the hypothesis by looking for a difference in steady state between the control group and the experimental group.&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;Don‚Äôt approach it with a random strategy, instead approach it like a scientific experiment, thoughtful and planned.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;what-experiments-can-you-run&quot;&gt;What experiments can you run?&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Reproduce outage conditions&lt;/li&gt;
  &lt;li&gt;Unpredictable circumstances&lt;/li&gt;
  &lt;li&gt;Large traffic spikes&lt;/li&gt;
  &lt;li&gt;Race conditions&lt;/li&gt;
  &lt;li&gt;Datacenter failure&lt;/li&gt;
  &lt;li&gt;Time travel - system clocks to be out of sync&lt;/li&gt;
  &lt;li&gt;Network errors&lt;/li&gt;
  &lt;li&gt;CPU overloads&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;However, ensure we restrict the &lt;strong&gt;blast radius&lt;/strong&gt; of our experiments.&lt;/p&gt;

&lt;p&gt;And after each experiment, reiterate the experiment to see if we are resilient to it.&lt;/p&gt;

&lt;h1 id=&quot;tools&quot;&gt;Tools&lt;/h1&gt;

&lt;p&gt;Tools that could be used:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Chaos Monkey; &lt;a href=&quot;https://github.com/Netflix/chaosmonkey&quot;&gt;https://github.com/Netflix/chaosmonkey&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Simian Army: &lt;a href=&quot;https://github.com/Netflix/SimianArmy&quot;&gt;https://github.com/Netflix/SimianArmy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Litmus: &lt;a href=&quot;http://github.com/&quot;&gt;github.com&lt;/a&gt;/openebs/Litmus&lt;/li&gt;
  &lt;li&gt;Powerful Seal: &lt;a href=&quot;https://github.com/bloomberg/powerfulseal&quot;&gt;https://github.com/bloomberg/powerfulseal&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;other&quot;&gt;Other&lt;/h2&gt;
&lt;p&gt;An interesting link that was shared during the talk was &lt;a href=&quot;http://github.com/danluu/post-mortems&quot;&gt;github.com/danluu/post-mortems&lt;/a&gt;. A repo of a number of post mortem of large company outages.&lt;/p&gt;</content><author><name>LefterisTatakis</name></author><category term="blog" /><category term="chaos engineering" /><category term="velocity" /><category term="tech" /><summary type="html">Talk given by @Ana_M_Medina from Gremlin.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/markdown.jpg" /></entry><entry><title type="html">Hello World - the beginning</title><link href="http://localhost:4000/hello-world-blog/" rel="alternate" type="text/html" title="Hello World - the beginning" /><published>2018-10-31T13:48:00+00:00</published><updated>2018-10-31T13:48:00+00:00</updated><id>http://localhost:4000/hello-world-blog</id><content type="html" xml:base="http://localhost:4000/hello-world-blog/">&lt;h2 id=&quot;hello-everyone-out-there---Ô∏è-Ô∏è&quot;&gt;Hello everyone out there! üëã  ‚úåÔ∏è Ô∏è&lt;/h2&gt;
&lt;p&gt;This is something I have been thinking for a while but never got the time to do it.&lt;/p&gt;

&lt;p&gt;While attending &lt;a href=&quot;https://conferences.oreilly.com/velocity&quot;&gt;Velocity&lt;/a&gt;, I was inspired by the cool tech and possiblities out there.
I therefore decided creating a summary and overview for people to get a brief introduction on topics touched upon at the Conference, would be something I would enjoy doing.&lt;/p&gt;

&lt;p&gt;Well here it is!! üéâ&lt;/p&gt;

&lt;p&gt;I am going to try do a bit of this, on technology, projects I have worked on, concepts I find awesome that we use at work (event sourcing, Kubernetes etc), possibly some triathlon and maybe some travelling blog posts!&lt;/p&gt;

&lt;p&gt;We shall see what the future brings.&lt;/p&gt;

&lt;p&gt;Its an idea, hopefully, it does not die out too soon ü§ûüèª&lt;/p&gt;</content><author><name>LefterisTatakis</name></author><category term="blog" /><category term="velocity" /><category term="hello" /><summary type="html">Hello everyone out there! üëã ‚úåÔ∏è Ô∏è This is something I have been thinking for a while but never got the time to do it.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/markdown.jpg" /></entry></feed>